version: 2

defaults: &defaults
  working_directory: ~/repo
  docker:
    - image: circleci/node:10.15.1

jobs:
  checkout_code:
    <<: *defaults
    steps:
      - checkout
      - attach_workspace:
          at: ~/repo
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "package.json" }}
            - v1-dependencies-
      - run: npm install
      - save_cache:
          paths:
            - node_modules
          key: v1-dependencies-{{ checksum "package.json" }}
      - persist_to_workspace:
          root: ~/repo
          paths: .

  test_and_report:
    <<: *defaults
    steps:
      - attach_workspace:
          at: ~/repo
      - run: npm install
      - run: npm rebuild
      - run:
          name: Install codecov
          command: npm install --save-dev codecov
      - run:
          name: Jest Tests && Codecov Report
          command: npm run test:ci
      - store_artifacts:
          path: ./coverage/
          prefix: tests
      - store_artifacts:
          path: coverage
          prefix: coverage
      - store_test_results:
          path: ./coverage/

  build:
    <<: *defaults
    steps:
      - attach_workspace:
          at: ~/repo
      - run: npm install
      - run: npm rebuild
      - run:
          name: Build our app
          command: npm run build
      - persist_to_workspace:
          root: ~/repo
          paths: .

  publish_npm:
    <<: *defaults
    steps:
      - attach_workspace:
          at: ~/repo
      - run: npm install
      - run:
          name: Avoid hosts unknown for github
          command: mkdir ~/.ssh/ && echo -e "Host github.com\n\tStrictHostKeyChecking no\n" > ~/.ssh/config
      - run:
          name: Publish using Semantic Release
          command: npx semantic-release
      - persist_to_workspace:
          root: ~/repo
          paths: .

  publish_docs:
    working_directory: ~/repo
    docker:
      - image: circleci/ruby:2.6.0-node
    environment:
      BUNDLE_PATH: ~/repo/vendor/bundle
    steps:
      - attach_workspace:
          at: ~/repo
      - run:
          name: Avoid hosts unknown for github
          command: mkdir ~/.ssh/ && echo -e "Host github.com\n\tStrictHostKeyChecking no\n" > ~/.ssh/config
      - run: npm install
      - run: sudo npm install gitbook-cli -g
      - run:
          name: Do Magic
          command: sh ~/repo/.circleci/update-docs.sh

  deployment:
    <<: *defaults
    steps:
      - attach_workspace:
          at: ~/repo
      - run: npm install
      - run:
          name: Write NPM Token to ~/.npmrc
          command: echo "//registry.npmjs.org/:_authToken=$NPM_TOKEN" > ~/repo/.npmrc
      - run:
          name: Bump version number
          command: sh ~/repo/.circleci/version.sh
      - run:
          name: Publish package
          command: npm publish --tag next

workflows:
  version: 2

  ###
  # PULL REQUESTS
  ###
  test_build:
    jobs:
      - checkout_code:
          filters:
            branches:
              ignore:
                - master
                - feature/*
                - hotfix/*
      - test_and_report:
          requires:
            - checkout_code
      - build:
          requires:
            - checkout_code

  ###
  # MERGE: MASTER
  ###
  test_build_publish:
    jobs:
      - checkout_code:
          filters:
            branches:
              only: master
      - test_and_report:
          requires:
            - checkout_code
      - build:
          requires:
            - checkout_code
      - publish_npm:
          requires:
            - checkout_code
            - test_and_report
            - build
      #   - build_examples:
      #       requires:
      #         - publish_npm
      - publish_docs:
          requires:
            - publish_npm
  ###
  # MERGE: VNEXT
  ###
  test_build_deploy:
    jobs:
      - checkout_code:
          filters:
            branches:
              only: vNext
      - test_and_report:
          requires:
            - checkout_code
      - build:
          requires:
            - checkout_code
      - deployment:
          requires:
            - checkout_code
            - test_and_report
            - build
          # filters:
          #   branches:
          #     only:
          #       - development
          #       - master
          #       - production
